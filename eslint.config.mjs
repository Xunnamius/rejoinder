// @ts-check

import {
  assertEnvironment,
  moduleExport
} from '@-xun/symbiote/assets/eslint.config.mjs';

import { createDebugLogger } from 'rejoinder~dev';

const debug = createDebugLogger({ namespace: 'symbiote:config:eslint' });

const config = await moduleExport({
  derivedAliases: getEslintAliases(),
  ...(await assertEnvironment())
});

/* Add custom config objects here, such as those disabling certain rules */
config
  .push
  // ? Paths listed here are ignored by Eslint and related tooling.
  // { ignores: [] },
  // * Configs applying to both JavaScript & TypeScript files (all extensions)
  // ? Keep in mind that JS files can use @ts-check and "become" TS files,
  // ? hence the existence of this block. Logically, most rules should be
  // ? loaded here.
  // ...[
  //   { ...eslintPluginReactConfigs.flat.recommended, name: 'react:recommended' },
  //   // ? For react@>=17
  //   { ...eslintPluginReactConfigs.flat['jsx-runtime'], name: 'react:jsx-runtime' },
  //   {
  //     ...eslintPluginReactHooksConfigs['recommended-latest'],
  //     name: 'react-hooks:recommended-latest'
  //   },
  //   { ...eslintPluginJsxA11yFlatConfigs.recommended, name: 'jsx-a11y:recommended' }
  // ].flatMap((configs) =>
  //   overwriteProperty(configs, 'files', [
  //     `**/*.{ts,cts,mts,tsx}`
  //   ])
  // ),
  // {
  //   rules: {
  //     'unicorn/no-keyword-prefix': 'off',
  //     'no-restricted-syntax': 'off'
  //   }
  // }
  ();

export default config;

debug('exported config: %O', config);

function getEslintAliases() {
  // ! These aliases are auto-generated by symbiote. Instead of modifying them
  // ! directly, consider regenerating aliases across the entire project with:
  // ! `npx symbiote project renovate --regenerate-assets --assets-preset ...`
  return [
    ['multiverse+cli:*', './packages/cli/src/*'],
    ['multiverse+debug:*', './packages/debug/src/*'],
    ['multiverse+github:*', './packages/github/src/*'],
    ['multiverse+listr2:*', './packages/listr2/src/*'],
    ['multiverse+cli', './packages/cli/src/index.ts'],
    ['multiverse+debug', './packages/debug/src/index.ts'],
    ['multiverse+github', './packages/github/src/index.ts'],
    ['multiverse+listr2', './packages/listr2/src/index.ts'],
    ['rootverse+cli:*', './packages/cli/*'],
    ['rootverse+debug:*', './packages/debug/*'],
    ['rootverse+github:*', './packages/github/*'],
    ['rootverse+listr2:*', './packages/listr2/*'],
    ['rootverse:*', './*'],
    ['universe+cli:*', './packages/cli/src/*'],
    ['universe+debug:*', './packages/debug/src/*'],
    ['universe+github:*', './packages/github/src/*'],
    ['universe+listr2:*', './packages/listr2/src/*'],
    ['universe+cli', './packages/cli/src/index.ts'],
    ['universe+debug', './packages/debug/src/index.ts'],
    ['universe+github', './packages/github/src/index.ts'],
    ['universe+listr2', './packages/listr2/src/index.ts'],
    ['universe:*', './src/*'],
    ['universe', './src/index.ts'],
    ['testverse+cli:*', './packages/cli/test/*'],
    ['testverse+debug:*', './packages/debug/test/*'],
    ['testverse+github:*', './packages/github/test/*'],
    ['testverse+listr2:*', './packages/listr2/test/*'],
    ['testverse:*', './test/*'],
    ['typeverse:*', './types/*']
  ];
}
